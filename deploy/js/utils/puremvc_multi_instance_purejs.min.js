var puremvc;puremvc||(puremvc={patterns:{}}),puremvc.patterns.Notification=function(){function t(t,e,o){this.name=t,this.body=e,this.type=o}return t.prototype.getName=function(){return this.name},t.prototype.setBody=function(t){this.body=t},t.prototype.getBody=function(){return this.body},t.prototype.setType=function(t){this.type=t},t.prototype.getType=function(){return this.type},t.prototype.toString=function(){var t="Notification Name: "+this.getName();return t+="\nBody:"+(null==this.body?"null":""+this.body),t+="\nType:"+(null==this.type?"null":this.type)},t}(),puremvc.patterns.Notifier=function(){function t(t){this.facade=t}return t.prototype.sendNotification=function(t,e,o){this.facade.sendNotification(t,e,o)},t}(),puremvc.patterns.Observer=function(){function t(t,e){this.notify=t,this.context=e}return puremvc.core,t.prototype.setNotifyMethod=function(t){this.notify=t},t.prototype.setNotifyContext=function(t){this.context=t},t.prototype.getNotifyMethod=function(){return this.notify},t.prototype.getNotifyContext=function(){return this.context},t.prototype.notifyObserver=function(t){this.notify.apply(this.context,[t])},t.prototype.compareNotifyContext=function(t){return t===this.context},t}(),puremvc.patterns.Facade=function(){function t(){this.view=null,this.model=null,this.controller=null,this.initializeFacade()}var e=puremvc.patterns.Notification;return t.prototype.initializeFacade=function(){this.model=new puremvc.core.Model(this),this.view=new puremvc.core.View(this),this.controller=new puremvc.core.Controller(this)},t.prototype.registerCommand=function(t,e){this.controller.registerCommand(t,e)},t.prototype.removeCommand=function(t){this.controller.removeCommand(t)},t.prototype.hasCommand=function(t){return this.controller.hasCommand(t)},t.prototype.registerProxy=function(t){this.model.registerProxy(t)},t.prototype.retrieveProxy=function(t){return this.model.retrieveProxy(t)},t.prototype.removeProxy=function(t){this.model.removeProxy(t)},t.prototype.hasProxy=function(t){return this.model.hasProxy(t)},t.prototype.registerMediator=function(t){this.view.registerMediator(t)},t.prototype.retrieveMediator=function(t){return this.view.retrieveMediator(t)},t.prototype.removeMediator=function(t){return this.view.removeMediator(t)},t.prototype.hasMediator=function(t){return this.view.hasMediator(t)},t.prototype.sendNotification=function(t,o,r){this.notifyObservers(new e(t,o,r))},t.prototype.notifyObservers=function(t){this.view.notifyObservers(t)},t}(),puremvc.patterns.MacroCommand=function(){function t(t){this.subCommands=[],this.facade=this.facade||t,this.initializeMacroCommand()}return t.prototype={initializeMacroCommand:function(){},addSubCommand:function(t){this.subCommands.push(t)},execute:function(t){for(var e=this.subCommands.length,o=0;e>o;o++){var r=this.subCommands[o],i=new r;i.execute(t)}}},t}(),puremvc.patterns.SimpleCommand=function(){function t(t){this.facade=t}return t.prototype.execute=function(){},t}(),puremvc.patterns.Proxy=function(){function t(e,o,r){this.proxyName=null!=o?o:t.NAME,this.facade=this.facade||e,null!=r&&(this.data=r)}return t.prototype.getProxyName=function(){return this.proxyName},t.prototype.setData=function(t){this.data=t},t.prototype.getData=function(){return this.data},t.prototype.onRegister=function(){},t.prototype.onRemove=function(){},t.NAME="Proxy",t}(),puremvc.patterns.Mediator=function(){function t(t,e,o){this.mediatorName=null!=e?e:puremvc.patterns.Mediator.NAME,this.facade=this.facade||t,this.viewComponent=o}return t.prototype.listNotificationInterests=function(){return[]},t.prototype.getMediatorName=function(){return this.mediatorName},t.prototype.getViewComponent=function(){return this.viewComponent},t.prototype.setViewComponent=function(t){this.viewComponent=t},t.prototype.handleNotification=function(){},t.prototype.onRegister=function(){},t.prototype.onRemove=function(){},t}(),puremvc.core=function(){function t(t){this._proxyMap={},this.facade=t,this.initializeModel()}function e(t){this.facade=t,this.mediatorMap={},this.observerMap={},this.initializeView()}function o(t){this.facade=t,this.commandMap={},this.view=t.view}t.prototype.registerProxy=function(t){this._proxyMap[t.getProxyName()]=t,t.onRegister()},t.prototype.retrieveProxy=function(t){return this._proxyMap[t]},t.prototype.hasProxy=function(t){return null!=this._proxyMap[t]},t.prototype.removeProxy=function(t){var e=this._proxyMap[t];return e&&(delete this._proxyMap[t],e.onRemove()),e},t.prototype.initializeModel=function(){},e.prototype.initializeView=function(){},e.prototype.registerObserver=function(t,e){var o=this.observerMap[t];o?o.push(e):this.observerMap[t]=[e]},e.prototype.notifyObservers=function(t){var e=t.getName();if(null!=this.observerMap[e])for(var o=this.observerMap[e].concat(),r=o.length,i=0;r>i;i++){var n=o[i];n.notifyObserver(t)}},e.prototype.removeObserver=function(t,e){for(var o=this.observerMap[t],r=o.length;r--;){var i=o[r];if(i.compareNotifyContext(e)){o.splice(r,1);break}}o.length||delete this.observerMap[t]},e.prototype.registerMediator=function(t){var e=t.getMediatorName();if(!this.mediatorMap[e]){this.mediatorMap[e]=t;var o=t.listNotificationInterests(),i=o.length;if(i)for(var n=new r.Observer(t.handleNotification,t),a=0;i>a;a++)this.registerObserver(o[a],n);t.onRegister()}},e.prototype.retrieveMediator=function(t){return this.mediatorMap[t]},e.prototype.removeMediator=function(t){var e=this.mediatorMap[t];if(e){for(var o=e.listNotificationInterests(),r=o.length;r--;)this.removeObserver(o[r],e);delete this.mediatorMap[t],e.onRemove()}return e},e.prototype.hasMediator=function(t){return null!=this.mediatorMap[t]};var r=puremvc.patterns;return o.prototype.executeCommand=function(t){var e=this.commandMap[t.getName()];if(e){var o=new e(this.facade);o.execute(t)}},o.prototype.registerCommand=function(t,e){this.commandMap[t]||this.view.registerObserver(t,new r.Observer(this.executeCommand,this)),this.commandMap[t]=e},o.prototype.hasCommand=function(t){return null!=this.commandMap[t]},o.prototype.removeCommand=function(t){this.hasCommand(t)&&(this.view.removeObserver(t,this),delete this.commandMap[t])},o.prototype.removeCommand=function(t){this.hasCommand(t)&&(this.view.removeObserver(t,this),delete this.commandMap[t])},{Model:t,View:e,Controller:o}}();